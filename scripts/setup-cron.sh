#!/bin/bash

# ËÆæÁΩÆ‰ª£Á†ÅË¥®ÈáèËá™Âä®ÂåñÂ∑•ÂÖ∑
# ÂåÖÊã¨ cron ‰ªªÂä°Âíå git hooks
# Áî®Ê≥ï: ./scripts/setup-cron.sh

PROJECT_ROOT=$(pwd)
SCRIPT_PATH="$PROJECT_ROOT/scripts/review-reminder.js"

echo "üöÄ Setting up code quality automation tools..."

# Ê£ÄÊü•ËÑöÊú¨ÊòØÂê¶Â≠òÂú®
if [ ! -f "$SCRIPT_PATH" ]; then
    echo "‚ùå Error: review-reminder.js not found at $SCRIPT_PATH"
    exit 1
fi

# Á°Æ‰øùËÑöÊú¨ÂèØÊâßË°å
chmod +x "$SCRIPT_PATH"

# 1. ËÆæÁΩÆ Git Hooks
echo ""
echo "üîß Setting up Git hooks..."

# Ê£ÄÊü•ÊòØÂê¶Â∑≤ÁªèÈÖçÁΩÆ‰∫Ü git hooks Ë∑ØÂæÑ
CURRENT_HOOKS_PATH=$(git config core.hooksPath 2>/dev/null || echo "")

if [ "$CURRENT_HOOKS_PATH" != ".githooks" ]; then
    git config core.hooksPath .githooks
    echo "‚úÖ Git hooks path configured to .githooks"
else
    echo "‚úÖ Git hooks path already configured"
fi

# Á°Æ‰øù hooks ÂèØÊâßË°å
if [ -f ".githooks/pre-commit" ]; then
    chmod +x .githooks/pre-commit
    echo "‚úÖ Pre-commit hook configured"
else
    echo "‚ö†Ô∏è  Pre-commit hook not found"
fi

# 2. ËÆæÁΩÆ Cron ‰ªªÂä°
echo ""
echo "‚è∞ Setting up automated review reminders..."

# ÂàõÂª∫ cron ‰ªªÂä°
CRON_JOB="0 9 * * 1 cd $PROJECT_ROOT && node scripts/review-reminder.js >> /tmp/code-review-reminder.log 2>&1"

# Ê£ÄÊü•ÊòØÂê¶Â∑≤ÁªèÂ≠òÂú®Áõ∏ÂêåÁöÑ cron ‰ªªÂä°
if crontab -l 2>/dev/null | grep -q "review-reminder.js"; then
    echo "‚ö†Ô∏è  Cron job already exists. Updating..."
    # ÁßªÈô§ÊóßÁöÑ‰ªªÂä°
    crontab -l 2>/dev/null | grep -v "review-reminder.js" | crontab -
fi

# Ê∑ªÂä†Êñ∞ÁöÑ cron ‰ªªÂä°
(crontab -l 2>/dev/null; echo "$CRON_JOB") | crontab -

echo "‚úÖ Cron job added successfully!"
echo "üìÖ Schedule: Every Monday at 9:00 AM"
echo "üìù Log file: /tmp/code-review-reminder.log"

# 3. È™åËØÅËÆæÁΩÆ
echo ""
echo "üîç Verifying setup..."

# Ê£ÄÊü• Git hooks
if git config core.hooksPath | grep -q ".githooks"; then
    echo "‚úÖ Git hooks: Configured"
else
    echo "‚ùå Git hooks: Not configured"
fi

# Ê£ÄÊü• Cron ‰ªªÂä°
if crontab -l 2>/dev/null | grep -q "review-reminder.js"; then
    echo "‚úÖ Cron job: Configured"
else
    echo "‚ùå Cron job: Not configured"
fi

# Ê£ÄÊü•‰æùËµñ
if [ -d "login/node_modules" ]; then
    echo "‚úÖ Dependencies: Installed"
else
    echo "‚ö†Ô∏è  Dependencies: Not installed (run 'cd login && npm install')"
fi

# 4. ÊòæÁ§∫‰ΩøÁî®ËØ¥Êòé
echo ""
echo "üìö Usage Instructions:"
echo ""
echo "Manual Commands:"
echo "  node scripts/review-reminder.js           # Check if review is needed"
echo "  node scripts/review-reminder.js --force   # Force review reminder"
echo "  node scripts/quality-dashboard.js         # Generate quality report"
echo "  cd login && npm run quality-check         # Run all quality checks"
echo ""
echo "Git Integration:"
echo "  git commit                                 # Triggers pre-commit checks"
echo "  git commit --no-verify                    # Bypass pre-commit checks (not recommended)"
echo ""
echo "Automation:"
echo "  ‚Ä¢ Pre-commit hooks run automatically on 'git commit'"
echo "  ‚Ä¢ Review reminders run every Monday at 9:00 AM"
echo "  ‚Ä¢ CI/CD quality checks run on push/PR"
echo ""
echo "Configuration Files:"
echo "  ‚Ä¢ .quality-config.json                    # Quality standards"
echo "  ‚Ä¢ .kiro/review-process.md                 # Review process documentation"
echo "  ‚Ä¢ login/.eslintrc.js                      # ESLint configuration"
echo ""
echo "To remove automation:"
echo "  git config --unset core.hooksPath         # Remove git hooks"
echo "  crontab -l | grep -v 'review-reminder.js' | crontab -  # Remove cron job"