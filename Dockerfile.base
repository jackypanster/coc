# 基础镜像 Dockerfile - 包含所有稳定的依赖
FROM debian:bookworm

# 构建参数
ARG NODE_VERSION=20
ARG CLAUDE_CODE_VERSION=1.0.54
ARG CLAUDE_ROUTER_VERSION=1.0.26

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV NODE_VERSION=${NODE_VERSION}
ENV CLAUDE_CODE_VERSION=${CLAUDE_CODE_VERSION}
ENV CLAUDE_ROUTER_VERSION=${CLAUDE_ROUTER_VERSION}

# 配置APT镜像源以加速下载
RUN echo 'deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware' > /etc/apt/sources.list && \
    echo 'deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware' >> /etc/apt/sources.list && \
    echo 'deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware' >> /etc/apt/sources.list

# 安装基础依赖 - 极少变化，缓存效果最好
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    rm -f /etc/apt/apt.conf.d/docker-clean && \
    apt-get update && apt-get install -y --no-install-recommends \
    curl \
    wget \
    git \
    ca-certificates \
    build-essential \
    cmake \
    pkg-config \
    libjson-c-dev \
    libwebsockets-dev \
    libssl-dev \
    nginx

# 安装 Node.js - 很少变化，使用缓存加速
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - && \
    apt-get install -y --no-install-recommends nodejs

# 编译安装 ttyd - 很少变化，使用缓存优化
WORKDIR /tmp
RUN --mount=type=cache,target=/tmp/ttyd-cache \
    git clone https://github.com/tsl0922/ttyd.git && \
    cd ttyd && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    cd / && rm -rf /tmp/ttyd

# 配置npm国内镜像源并安装全局包 - 减少安装次数
RUN --mount=type=cache,target=/root/.npm \
    npm config set registry https://registry.npmmirror.com && \
    npm install -g \
    @anthropic-ai/claude-code@${CLAUDE_CODE_VERSION} \
    @musistudio/claude-code-router@${CLAUDE_ROUTER_VERSION}

# 创建工作目录
WORKDIR /app

# 创建配置目录
RUN mkdir -p /root/.claude-code-router

# 清理构建依赖（可选，减少镜像大小）
RUN apt-get remove -y build-essential cmake pkg-config && \
    apt-get autoremove -y && \
    apt-get clean

LABEL maintainer="Code on Cloud"
LABEL description="Base image with ttyd, Node.js, Nginx and global npm packages"
